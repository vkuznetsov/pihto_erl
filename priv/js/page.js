// Generated by CoffeeScript 1.10.0
var Collection, Routes, Slideshow, Thumb, Thumbnails;

Collection = React.createClass({displayName: "Collection",
  componentDidMount: function() {
    var self;
    self = this;
    return $.getJSON("/images?tag=" + this.props.query, function(data) {
      var images;
      images = data.map(function(image_id) {
        return {
          uid: image_id
        };
      });
      return self.setState({
        images: images,
        page: 1
      });
    });
  },
  images: function() {
    return this.state.images;
  },
  render: function() {
    if (this.state && this.state.images) {
      return React.createElement("div", null, React.createElement(Thumbnails, {
        "images": this.state.images
      }));
    } else {
      return React.createElement("div", null);
    }
  }
});

Thumbnails = React.createClass({displayName: "Thumbnails",
  showSlideshow: function(index) {
    return React.render(React.createElement(Slideshow, {
      "images": this.props.images,
      "index": index
    }), document.getElementById('slideshow'));
  },
  render: function() {
    var create_item, showSlideshow;
    showSlideshow = this.showSlideshow;
    create_item = function(image, index) {
      return React.createElement(Thumb, {
        "key": image.uid,
        "image": image,
        "index": index,
        "showSlideshow": showSlideshow
      });
    };
    return React.createElement("div", null, this.props.images.map(create_item));
  }
});

Thumb = React.createClass({displayName: "Thumb",
  showSlideshow: function(e) {
    e.preventDefault();
    return this.props.showSlideshow(this.props.index);
  },
  render: function() {
    var image;
    image = this.props.image;
    return React.createElement("div", {
      "className": "thumb-box"
    }, React.createElement("span", {
      "className": "thumb-box-overlay"
    }, React.createElement("span", {
      "className": "thumb-box-overlay-background"
    }), React.createElement("a", {
      "className": "glyphicon glyphicon-new-window",
      "href": Routes.image_origin(image),
      "target": "_blank"
    }), React.createElement("a", {
      "className": "glyphicon glyphicon-picture",
      "href": Routes.image_source(image),
      "target": "_blank"
    })), React.createElement("a", {
      "className": "openslide",
      "href": Routes.image_thumbnail(image),
      "onClick": this.showSlideshow,
      "target": "_blank"
    }, React.createElement("img", {
      "className": "thumb",
      "src": Routes.image_thumbnail(image),
      "alt": "image"
    })));
  }
});

Slideshow = React.createClass({displayName: "Slideshow",
  getInitialState: function() {
    return {
      index: this.props.index
    };
  },
  componentDidMount: function() {
    var self;
    self = this;
    $('#slideshow-window').keydown(function(e) {
      switch (e.which) {
        case 39:
          return self.setState({
            index: self.state.index + 1
          });
        case 37:
          return self.setState({
            index: self.state.index - 1
          });
        case 69:
          return $('#edit_form').modal();
      }
    });
    return $('#slideshow-window').modal();
  },
  render: function() {
    return React.createElement("img", {
      "src": Routes.image_big(this.props.images[this.state.index])
    });
  }
});

Routes = {
  image_thumbnail: function(image) {
    return "/st/thumb/" + image.uid;
  },
  image_big: function(image) {
    return "/st/thumb/" + image.uid;
  },
  image_origin: function(image) {
    return "/image/origin/" + image.uid;
  },
  image_source: function(image) {
    return "/image/src/" + image.uid;
  }
};

$(document).ready(function() {
  return React.render(React.createElement(Collection, {
    "query": "cat"
  }), document.getElementById('thumbs'));
});
